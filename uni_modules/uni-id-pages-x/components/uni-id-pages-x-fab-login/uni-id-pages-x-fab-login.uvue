<template>
	<view class="fab-login-box">
		<template v-for="(item,index) in servicesList" :key="item.id">
			<view class="item" @click="changeLoginType(index)">
				<image class="logo" :src="item.logo" mode="scaleToFill"></image>
				<text class="title">{{item.text}}</text>
			</view>
		</template>
	</view>
</template>
<script>
	// import config from '@/uni_modules/uni-id-pages-x/config.js'
	//前一个窗口的页面地址。控制点击切换快捷登录方式是创建还是返回
	// import {store,mutations} from '@/uni_modules/uni-id-pages-x/common/store.js'
	// let allServicesList = []

	import config from '@/uni_modules/uni-id-pages-x/config.uts';
	import { state } from '@/uni_modules/uni-id-pages-x/store.uts';
  import {servicesList,Services} from '@/uni_modules/uni-id-pages-x/lib/servicesList.uts';
  // console.log('servicesList',servicesList)
	export default {
		name: "uni-id-pages-x-fab-login",
		props: {
			currentLoginType: {
				type: String
			}
		},
		computed: {
			agreements() {
				// if (!config.agreements) {
				// 	return []
				// }
				// let {
				// 	serviceUrl,
				// 	privacyUrl
				// } = config.agreements
				// return [{
				// 		url: serviceUrl,
				// 		title: "用户服务协议"
				// 	},
				// 	{
				// 		url: privacyUrl,
				// 		title: "隐私政策条款"
				// 	}
				// ]
			},
      servicesList():Services[]{
        // 过滤当前已经显示的
        return (servicesList as Services[]).filter((item:Services):boolean => item['id'] != this.currentLoginType)
      }
		},
		data() {
			return {
				univerifyStyle:{ //一键登录弹出窗的样式配置参数
          "fullScreen": true, // 是否全屏显示，true表示全屏模式，false表示非全屏模式，默认值为false。
          "backgroundColor": "#ffffff", // 授权页面背景颜色，默认值：#ffffff
          "buttons": { // 自定义登录按钮
            "iconWidth": "45px", // 图标宽度（高度等比例缩放） 默认值：45px
            // "list": [] as Array
          },
          "privacyTerms": {
            "defaultCheckBoxState": false, // 条款勾选框初始状态 默认值： true
            "textColor": "#BBBBBB", // 文字颜色 默认值：#BBBBBB
            "termsColor": "#5496E3", //  协议文字颜色 默认值： #5496E3
            "prefix": "我已阅读并同意", // 条款前的文案 默认值：“我已阅读并同意”
            "suffix": "并使用本机号码登录", // 条款后的文案 默认值：“并使用本机号码登录”
            // "privacyItems": []
          }
        } as UTSJSONObject
			}
		},
		watch: {
			agree(agree) {
				this.univerifyStyle.privacyTerms!.defaultCheckBoxState = agree
			}
		},
		methods: {
			changeLoginType(index : number) {
				const id = this.servicesList[index].id
				if (!["username", "smsCode","univerify"].includes(id)) {
					return uni.showToast({
						title: 'uni-app x暂未支持此登录方式',
						icon: 'none',
						duration: 3000
					});
				}

				this.$emit('changeLoginType', id)

				if (["weixin", "apple", "univerify"].includes(id)) {
					this.login_before(id)
				}
			},
			login_before(type : string) {
				console.log(type);
				// 提示空实现
				if (["qq", "xiaomi", "sinaweibo", "taobao", "facebook", "google", "alipay", "douyin"].includes(type)) {
					return uni.showToast({
						title: '该登录方式暂未支持',
						icon: 'none',
						duration: 3000
					});
				}
				//检查当前环境是否支持这种登录方式

				//判断是否需要弹出隐私协议授权框
				const scopeList = config.getArray<string>('agreements.scopeList')
				// 配置中，当前类型是否需要，用户同意隐私协议
				let needAgreements = scopeList!.includes('register')
        // console.log('needAgreements',needAgreements)

				// 排除一键登录的情况（在一键登录的弹出层中选择） && !this.agree 未同意 && 需要同意
				if (type != 'univerify' && needAgreements && !state.pendingAgreements) {
					return uni.showToast({
						title: '你未同意隐私政策协议',
						icon: 'none'
					});
					// console.log('晃动申请同意隐私协议的框');
					// uni.$emit("uni-id-pages-x-agreements-shake",'')
				}
			}
		}
	}
</script>

<style lang="scss" scoped>
	.fab-login-box {
		width: 750rpx;
		position: fixed;
		bottom: 30px;
		left: 0px;
		flex-direction: row;
		flex-wrap: wrap;
		justify-content: space-around;
		z-index: 10;
	}

	.fab-login-box .item {
		flex-direction: column;
		justify-content: center;
		align-items: center;
		/* #ifdef WEB */
		cursor: pointer;
		/* #endif */
	}

	.fab-login-box .item .logo {
		width: 30px;
		height: 30px;
		border-radius: 100px;
		border: solid 1px #F6F6F6;
	}

	.fab-login-box .item .title {
		text-align: center;
		color: #999;
		font-size: 10px;
		width: 70px;
		height: 20px;
		line-height: 20px;
	}
</style>
