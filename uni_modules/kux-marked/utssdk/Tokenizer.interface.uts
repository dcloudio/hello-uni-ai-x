import { Rules } from './Rules.interface';
import { I_Lexer } from './Lexer.interface';
import { Blockquote, Br, Code, Codespan, Def, Del, Em, Escape, HTML, Heading, Hr, Link, Links, List, Paragraph, Space, Strong, Table, Tag, Text, Image, NodesToken } from './Tokens.interface';
import { MarkedOptions } from './MarkedOptions.interface';

/**
 * Tokenizer
 */
export interface I_Tokenizer {
	options: MarkedOptions;
	rules: Rules | null;
	lexer: I_Lexer | null;
	
	space(src: string): NodesToken | null;
	code(src: string): NodesToken | null;
	fences(src: string): NodesToken | null;
	heading(src: string): NodesToken | null;
	hr(src: string): NodesToken | null;
	blockquote(src: string): NodesToken | null;
	list(source: string): NodesToken | null;
	html(src: string): NodesToken | null;
	def(src: string): NodesToken | null;
	table(src: string): NodesToken | null;
	lheading(src: string): NodesToken | null;
	paragraph(src: string): NodesToken | null;
	text(src: string): NodesToken | null;
	escape(src: string): NodesToken | null;
	tag(src: string): NodesToken | null;
	link(src: string): NodesToken | null;
	reflink(src: string, links: Links): NodesToken | null;
	emStrong(src: string, maskedSrcSource: string, prevCharSource?: string | null): NodesToken | null;
	codespan(src: string): NodesToken | null;
	br(src: string): NodesToken | null;
	del(src: string): NodesToken | null;
	autolink(src: string): NodesToken | null;
	url(src: string): NodesToken | null;
	inlineText(src: string): NodesToken | null;
}