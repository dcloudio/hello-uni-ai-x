import { I_TextRenderer, Strong, Em, Codespan, Del, HTML, Tag, Text, Escape, Link, Image, NodesToken } from '../utssdk/interface';

/**
 * TextRenderer
 * returns only the textual part of the token
 */
export class TextRenderer implements I_TextRenderer {
	// no need for block level renderers
	strong(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	em(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	codespan(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	del(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	html(option: NodesToken): string {
		// option = option as HTML | Tag;
		return option.text!;
		let text: string = '';
		if (option.type == 'html') {
			// option = option as HTML;
			text = option.text!;
		} else {
			// option = option as Tag;
			text = option.text!;
		}
		return text;
	}
	
	text(option: NodesToken): string {
		// console.log(option);
		// option = option as Text | Escape | Tag
		return option.text!;
		let text = '';
		if (option.type == 'text') {
			// option = option as Text;
			text = option.text!;
		} else if (option.type == 'escape') {
			// option = option as Escape;
			text = option.text!;
		} else {
			// option = option as Tag;
			text = option.text!;
		}
		return text;
	}
	
	link(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	image(option: NodesToken): string {
		const { text } = option;
		return text!;
	}
	
	br(): string {
		return '';
	}
}