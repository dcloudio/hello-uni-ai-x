<template>
	<view class="ai-model" :class="{'ui-theme-dark': uiTheme == 'dark'}">
		<view class="content" @click="open">
			<image class="logo" :src="'/uni_modules/uni-ai-x/static/ai-provider/' + llmProvider + '.png'" mode="aspectFill"></image>
			<text class="text">{{llmModel}}</text>
			<uni-ai-icon class="icon" code="e6bd" color="#555" size="8"></uni-ai-icon>
		</view>
		<uni-popup ref="popup" @clickMask="close">
			<!-- <view class="choose-llm-model">
				<text class="title">选择AI模型</text>
				<scroll-view :scroll-y="true" class="scroll-view">
					<view v-for="provider in providerNameList" class="provider-item">
						<view class="info">
							<image class="logo" :src="'/uni_modules/uni-ai-x/static/ai-provider/'+provider+'.png'" mode="aspectFill"></image>
							<view class="content">
								<text class="name">{{provider}}</text>
								<text class="description">{{llmModelMap.get(provider)!.description}}</text>
							</view>
						</view>
						<view v-for="(llmMode, i) in llmModelMap.get(provider)!.models" :key="i" @click="radioChange(provider, llmMode.name)" class="model-item">
							<uni-icons class="radio" type="checkbox-filled" size="18" :color="currentModel == llmMode.name ? '#007AFF' : '#DDD'"></uni-icons>
							<text class="text">{{llmMode.name}}</text>
							<text class="tag" v-if="llmMode.thinking">思考</text>
							<text class="tag" v-if="llmMode.webSearch">搜索</text>
						</view>
					</view>	
				</scroll-view>
			</view> -->
		</uni-popup>
	</view>
</template>

<script>
	import uniAi from '../../sdk';
	import {Provider} from '@/uni_modules/uni-ai-x/types.uts';
	import {llmModelMap, providerNameList} from '../../config';
	export default {
		name: 'aiModel',
		computed: {
			uiTheme(): string {
				// return uniImX.ext.getString('uiTheme','light')
				return 'light'
			},
			currentModel(): string {
				return uniAi.llm.model
			},
			llmProvider(): string {
				return uniAi.llm.provider
			},
			llmModel(): string {
				return uniAi.llm.model
			},
			// llmModelMap(): Map<string, Provider> {
			// 	return llmModelMap
			// }
		},
		data() {
			return {
				llmModelMap: llmModelMap as Map<string, Provider>,
				providerNameList : providerNameList as string[],
			};
		},
		mounted() {
			// console.log('mounted');
			// this.open();
		},
		methods: {
			radioChange(provider: string, llmModel: string) {
				// console.log('provider',provider)
				// console.log('llmModel',llmModel)
				uniAi.llm.provider = provider
				uniAi.llm.model = llmModel
				setTimeout(()=>this.close(),100)
			},
			open() {
			  // console.log('callback',callback);
			  (this.$refs['popup'] as ComponentPublicInstance).$callMethod("open");
			},
			close() {
			  (this.$refs['popup'] as ComponentPublicInstance).$callMethod("close");
			}
		}
	}
</script>

<style lang="scss">
.ai-model {
	.content {
		flex-direction: row;
		align-items: center;
		justify-content: center;
		padding: 10px;
		// #ifdef WEB
		cursor: pointer;
		// #endif
		.logo {
			width: 15px;
			height: 15px;
			margin-right: 2px;
		}
		.text {
			color: #999;
			font-size: 16px;
		}
		.icon {
			margin-left: 2px;
		}
	}
	.choose-llm-model {
		width: 600rpx;
		border-radius: 5px;
		background-color: #fff;
		padding: 10px 0;
		.title {
			padding-bottom:5px;
			text-align: center;
			font-size: 16px;
			font-weight: bold;
			color: #333;
		}
		.scroll-view {
			padding:0 15px;
			max-height: 550rpx;
			.provider-item {
				margin-bottom: 15px;
				.info {
					flex-direction: row;
					.logo {
						width: 20px;
						height: 20px;
						margin-right: 5px;
					}
					.content {
						flex: 1;
						flex-direction: column;
						align-items: flex-start;
						padding: 0;
						.name {
							font-size: 16px;
							color: #666;	
						}
						.description {
							font-size: 16px;
							color: #999;
						}
					}
				}
				.model-item {
					padding: 5px;
					flex-direction: row;
					align-items: center;
					// #ifdef WEB
					cursor: pointer;
					// #endif
					.radio {
						// border: 1px solid #ccc;
					}
					.text {
						margin-left: 5px;
						color: #666;
						font-size: 14px;
						// 超出隐藏
						flex-shrink: 1;
						overflow: hidden;
						text-overflow: ellipsis;
						white-space: nowrap;
					}
					.tag {
						font-size: 12px;
						margin-left: 5px;
						color: #007AFF;
						border: 1px solid #007AFF;
						border-radius: 5px;
						padding: 1px 2px;	
						transform: scale(0.8);
					}
				}	
			}
		}
	}
}
.ui-theme-dark {
	.choose-llm-model {
		background-color: #3a3a46;
		.title {
			color: #fff;
		}
		.name {
			color: #fff !important;
		}
		.description {
			color: #aaa !important;
		}
		.model-item {
			.text {
				color: #fff !important;
			}
			.tag {
				color: #409EFF;
				border-color: #409EFF;
			}
		}
	}
}
</style>
